(()=>{"use strict";function o(o,t){return this.row=o,this.col=t,{row:o,col:t,getPosString(){return`${this.row}, ${this.col}`}}}const t=[[1,2],[-1,2],[2,1],[-2,1],[-2,-1],[2,-1],[1,-2],[-1,-2]];function n(o,n){const r=[];for(let s of t){const t=o+s[0],e=n+s[1];t>0&&t<=8&&e>0&&e<=8&&r.push([t,e])}return r}console.log(function(t,r){const s=[],e=new Set,c=new o(t[0],t[1]);s.push([c]);const l=new o(r[0],r[1]);for(;s.length;){const t=s.shift(),r=t[t.length-1];if(r.row===l.row&&r.col===l.col)return t.map((o=>[o.row,o.col]));e.add(r.getPosString());for(let c of n(r.row,r.col)){const n=new o(c[0],c[1]);e.has(n.getPosString())||s.push([...t,n])}if(!s.length)break}return null}([8,8],[8,2]))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQWUsU0FBU0EsRUFBS0MsRUFBS0MsR0FJaEMsT0FIQUMsS0FBS0YsSUFBTUEsRUFDWEUsS0FBS0QsSUFBTUEsRUFFSixDQUNMRCxNQUNBQyxNQUNBRSxlQUNFLE1BQU8sR0FBR0QsS0FBS0YsUUFBUUUsS0FBS0QsS0FDOUIsRUFFSixDQ1RBLE1BQU1HLEVBQWEsQ0FBQyxDQUFDLEVBQUcsR0FBSSxFQUFFLEVBQUcsR0FBSSxDQUFDLEVBQUcsR0FBSSxFQUFFLEVBQUcsR0FBSSxFQUFFLEdBQUksR0FBSSxDQUFDLEdBQUksR0FBSSxDQUFDLEdBQUksR0FBSSxFQUFFLEdBQUksSUEyQ3hGLFNBQVNDLEVBQWFMLEVBQUtDLEdBQ3pCLE1BQU1LLEVBQVksR0FFbEIsSUFBSyxJQUFJQyxLQUFhSCxFQUFZLENBQ2hDLE1BR01JLEVBQWNSLEVBSEZPLEVBQVUsR0FJdEJFLEVBQWNSLEVBSEZNLEVBQVUsR0FLeEJDLEVBQWMsR0FBS0EsR0FBZSxHQUFLQyxFQUFjLEdBQUtBLEdBQWUsR0FFM0VILEVBQVVJLEtBQUssQ0FBQ0YsRUFBYUMsR0FFakMsQ0FFQSxPQUFPSCxDQUNULENDNURBSyxRQUFRQyxJREVPLFNBQXFCQyxFQUFVQyxHQUU1QyxNQUFNQyxFQUFRLEdBQ1JDLEVBQVUsSUFBSUMsSUFFZEMsRUFBWSxJQUFJbkIsRUFBS2MsRUFBUyxHQUFJQSxFQUFTLElBQ2pERSxFQUFNTCxLQUFLLENBQUNRLElBQ1osTUFBTUMsRUFBYSxJQUFJcEIsRUFBS2UsRUFBVSxHQUFJQSxFQUFVLElBRXBELEtBQU1DLEVBQU1LLFFBQVEsQ0FFbEIsTUFBTUMsRUFBT04sRUFBTU8sUUFDYkMsRUFBT0YsRUFBS0EsRUFBS0QsT0FBUyxHQUdoQyxHQUFHRyxFQUFLdkIsTUFBUW1CLEVBQVduQixLQUFPdUIsRUFBS3RCLE1BQVFrQixFQUFXbEIsSUFBSyxPQUFPb0IsRUFBS0csS0FBSUMsR0FBWSxDQUFDQSxFQUFTekIsSUFBS3lCLEVBQVN4QixPQUVuSGUsRUFBUVUsSUFBSUgsRUFBS3BCLGdCQUdqQixJQUFJLElBQUl3QixLQUFZdEIsRUFBYWtCLEVBQUt2QixJQUFLdUIsRUFBS3RCLEtBQU0sQ0FDcEQsTUFBTTJCLEVBQWUsSUFBSTdCLEVBQUs0QixFQUFTLEdBQUlBLEVBQVMsSUFHaERYLEVBQVFhLElBQUlELEVBQWF6QixpQkFFM0JZLEVBQU1MLEtBQUssSUFBSVcsRUFBTU8sR0FFekIsQ0FHQSxJQUFLYixFQUFNSyxPQUNULEtBRUosQ0FHQSxPQUFPLElBQ1QsQ0N4Q1lVLENBQVksQ0FBQyxFQUFHLEdBQUssQ0FBQyxFQUFHLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rbmlnaHQtdHJhdmFpbHMvLi9zcmMvc2NyaXB0cy9Ob2RlLmpzIiwid2VicGFjazovL2tuaWdodC10cmF2YWlscy8uL3NyYy9zY3JpcHRzL2tuaWdodE1vdmVzLmpzIiwid2VicGFjazovL2tuaWdodC10cmF2YWlscy8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOb2RlKHJvdywgY29sKSB7XG4gIHRoaXMucm93ID0gcm93O1xuICB0aGlzLmNvbCA9IGNvbDtcblxuICByZXR1cm4ge1xuICAgIHJvdyxcbiAgICBjb2wsXG4gICAgZ2V0UG9zU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIGAke3RoaXMucm93fSwgJHt0aGlzLmNvbH1gXG4gICAgfVxuICB9XG59IiwiaW1wb3J0IE5vZGUgZnJvbSBcIi4vTm9kZVwiO1xuXG5jb25zdCBkaXJlY3Rpb25zID0gW1sxLCAyXSwgWy0xLCAyXSwgWzIsIDFdLCBbLTIsIDFdLCBbLTIsIC0xXSwgWzIsIC0xXSwgWzEsIC0yXSwgWy0xLCAtMl1dXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGtuaWdodE1vdmVzKHN0YXJ0UG9zLCB0YXJnZXRQb3MpIHtcblxuICBjb25zdCBxdWV1ZSA9IFtdXG4gIGNvbnN0IHZpc2l0ZWQgPSBuZXcgU2V0KClcbiAgXG4gIGNvbnN0IHN0YXJ0Tm9kZSA9IG5ldyBOb2RlKHN0YXJ0UG9zWzBdLCBzdGFydFBvc1sxXSlcbiAgcXVldWUucHVzaChbc3RhcnROb2RlXSlcbiAgY29uc3QgdGFyZ2V0Tm9kZSA9IG5ldyBOb2RlKHRhcmdldFBvc1swXSwgdGFyZ2V0UG9zWzFdKVxuXG4gIHdoaWxlKHF1ZXVlLmxlbmd0aCkge1xuICAgIC8vIHJlbW92ZSBwYXRoIGZyb20gcXVldWVcbiAgICBjb25zdCBwYXRoID0gcXVldWUuc2hpZnQoKVxuICAgIGNvbnN0IG5vZGUgPSBwYXRoW3BhdGgubGVuZ3RoIC0gMV1cblxuICAgIC8vIHByb2Nlc3Mgbm9kZVxuICAgIGlmKG5vZGUucm93ID09PSB0YXJnZXROb2RlLnJvdyAmJiBub2RlLmNvbCA9PT0gdGFyZ2V0Tm9kZS5jb2wpIHJldHVybiBwYXRoLm1hcChwYXRoTm9kZSA9PiBbcGF0aE5vZGUucm93LCBwYXRoTm9kZS5jb2xdKVxuXG4gICAgdmlzaXRlZC5hZGQobm9kZS5nZXRQb3NTdHJpbmcoKSlcblxuICAgIC8vIGFkZCBuZWlnaGJvcnMgdG8gcXVldWVcbiAgICBmb3IobGV0IG5laWdoYm9yIG9mIGdldE5laWdoYm9ycyhub2RlLnJvdywgbm9kZS5jb2wpKSB7XG4gICAgICBjb25zdCBuZWlnaGJvck5vZGUgPSBuZXcgTm9kZShuZWlnaGJvclswXSwgbmVpZ2hib3JbMV0pXG5cbiAgICAgIC8vIGNoZWNrIGlmIG5vZGUgaXMgaXMgYWxyZWFkeSB2aXNpdGVkXG4gICAgICBpZighdmlzaXRlZC5oYXMobmVpZ2hib3JOb2RlLmdldFBvc1N0cmluZygpKSkge1xuICAgICAgICAvLyBpZiBub3QgdmlzaXRlZCwgYWRkIHBhdGggdG8gbmVpZ2hib3Igbm9kZSB0byBxdWV1ZVxuICAgICAgICBxdWV1ZS5wdXNoKFsuLi5wYXRoLCBuZWlnaGJvck5vZGVdKVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNoZWNrIGlmIHRoZSBxdWV1ZSBpcyBlbXB0eSBiZWZvcmUgYWNjZXNzaW5nIG5vZGUgcHJvcGVydGllc1xuICAgIGlmICghcXVldWUubGVuZ3RoKSB7XG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIC8vIG5vIHBhdGggZm91bmRcbiAgcmV0dXJuIG51bGxcbn1cblxuXG5mdW5jdGlvbiBnZXROZWlnaGJvcnMocm93LCBjb2wpIHtcbiAgY29uc3QgbmVpZ2hib3JzID0gW11cblxuICBmb3IgKGxldCBkaXJlY3Rpb24gb2YgZGlyZWN0aW9ucykge1xuICAgIGNvbnN0IHJvd0NoYW5nZSA9IGRpcmVjdGlvblswXVxuICAgIGNvbnN0IGNvbENoYW5nZSA9IGRpcmVjdGlvblsxXVxuXG4gICAgY29uc3QgbmVpZ2hib3JSb3cgPSByb3cgKyByb3dDaGFuZ2VcbiAgICBjb25zdCBuZWlnaGJvckNvbCA9IGNvbCArIGNvbENoYW5nZVxuXG4gICAgaWYgKG5laWdoYm9yUm93ID4gMCAmJiBuZWlnaGJvclJvdyA8PSA4ICYmIG5laWdoYm9yQ29sID4gMCAmJiBuZWlnaGJvckNvbCA8PSA4KSB7XG4gICAgICAvLyBBZGQgbmVpZ2hib3IgdG8gbGlzdCBvZiBuZWlnaGJvcnMgaWYgaXQgaXMgd2l0aGluIHRoZSBib3VuZHMgb2YgdGhlIGNoZXNzYm9hcmRcbiAgICAgIG5laWdoYm9ycy5wdXNoKFtuZWlnaGJvclJvdywgbmVpZ2hib3JDb2xdKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZWlnaGJvcnNcbn0iLCJpbXBvcnQga25pZ2h0TW92ZXMgZnJvbSBcIi4vc2NyaXB0cy9rbmlnaHRNb3Zlc1wiO1xuXG5jb25zb2xlLmxvZyhrbmlnaHRNb3ZlcyhbOCwgOF0gLCBbOCwgMl0pKTsiXSwibmFtZXMiOlsiTm9kZSIsInJvdyIsImNvbCIsInRoaXMiLCJnZXRQb3NTdHJpbmciLCJkaXJlY3Rpb25zIiwiZ2V0TmVpZ2hib3JzIiwibmVpZ2hib3JzIiwiZGlyZWN0aW9uIiwibmVpZ2hib3JSb3ciLCJuZWlnaGJvckNvbCIsInB1c2giLCJjb25zb2xlIiwibG9nIiwic3RhcnRQb3MiLCJ0YXJnZXRQb3MiLCJxdWV1ZSIsInZpc2l0ZWQiLCJTZXQiLCJzdGFydE5vZGUiLCJ0YXJnZXROb2RlIiwibGVuZ3RoIiwicGF0aCIsInNoaWZ0Iiwibm9kZSIsIm1hcCIsInBhdGhOb2RlIiwiYWRkIiwibmVpZ2hib3IiLCJuZWlnaGJvck5vZGUiLCJoYXMiLCJrbmlnaHRNb3ZlcyJdLCJzb3VyY2VSb290IjoiIn0=